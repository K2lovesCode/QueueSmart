 Parent App Functionality
Successful Queue Entry (Code):

Action: A parent enters a valid, active teacher code.

Expected Result: The parent is successfully added to the end of that teacher's queue and sees their position.

Purpose: Tests the primary method of joining a queue.

Successful Queue Entry (QR Scan):

Action: A parent scans a valid, active teacher QR code.

Expected Result: The parent is successfully added to the queue and their position is displayed.

Purpose: Tests the alternative QR code entry method.

Joining Multiple Queues:

Action: A parent joins Teacher A's queue, and then successfully joins Teacher B's queue.

Expected Result: The parent's app dashboard clearly displays their position in both queues simultaneously.

Purpose: Verifies that a parent can be a member of multiple queues at once.

Invalid Code/QR Entry:

Action: A parent enters a code that is misspelled, expired, or doesn't exist.

Expected Result: The app displays a clear error message and does not add the parent to any queue.

Purpose: Ensures proper error handling for incorrect inputs.

Re-joining an Existing Queue:

Action: A parent who is already in Teacher A's queue tries to join it again.

Expected Result: The app shows a message like "You are already in this queue" and displays their current position, rather than creating a duplicate entry.

Purpose: Prevents data duplication.

üë©‚Äçüè´ Teacher App Functionality
Start Meeting:

Action: The teacher presses the "Start Meeting" button for the parent at the top of the queue.

Expected Result: The teacher's app status changes to "In a Meeting." The parent's status also changes and they are notified.

Purpose: Tests the primary action to begin a consultation.

End Meeting:

Action: After a meeting, the teacher presses the "End Meeting" button.

Expected Result: The parent who just finished is removed from that specific queue. The queue automatically advances.

Purpose: Verifies the standard workflow for completing a meeting.

Skip Parent (No-Show):

Action: The parent at the top of the queue does not show up. The teacher presses the "Skip" button.

Expected Result: The skipped parent is notified and moved to the end of the queue or a low-priority slot. The queue advances.

Purpose: Tests the handling of absent parents.

Viewing Parent Status:

Action: The teacher views their queue.

Expected Result: The teacher can see an ordered list of parents and their status (e.g., "Waiting," "In Meeting with another teacher").

Purpose: Ensures the teacher has full visibility of their queue.

üîÑ Core Logic & System Scenarios
Automatic Skip for Busy Parent:

Action: Parent A is in a meeting with Teacher X. Their turn comes up for Teacher Y.

Expected Result: Teacher Y's app automatically skips Parent A, showing a message like "Parent A is currently busy." Parent A is notified their turn was deferred.

Purpose: Critical test for the core "busy parent" feature.

Priority Re-queue After Meeting:

Action: Parent A finishes their meeting with Teacher X. They were previously skipped by Teacher Y.

Expected Result: Parent A is immediately placed at the top (position #1) of Teacher Y's queue.

Purpose: Critical test for the priority logic.

Real-time Queue Update for Parents:

Action: A parent is 5th in a queue. The teacher finishes two meetings.

Expected Result: The parent's app updates in near real-time, showing their position changing from 5th to 3rd without a manual refresh.

Purpose: Verifies dynamic UI updates.

Network Loss (Parent):

Action: A parent joins a queue and then loses internet connectivity.

Expected Result: The parent remains in the queue on the server. When they reconnect, their app syncs to show their current, correct status.

Purpose: Tests system resilience to network interruptions.

Network Loss (Teacher):

Action: A teacher starts a meeting and then loses internet connectivity.

Expected Result: The system should have a server-side timeout to prevent the queue from being blocked indefinitely.

Purpose: Prevents a single point of failure from halting a queue.

Simultaneous Actions (Race Condition):

Action: Parent X finishes a meeting with Teacher A at the exact same moment Teacher B tries to start a meeting with Parent X.

Expected Result: The system handles the requests sequentially without errors. Parent X's status is correctly updated to show them in a meeting with Teacher B.

Purpose: Stress test for the server logic to handle concurrent requests.

üñ•Ô∏è Admin Panel Functionality
Add New Teacher & Create Login:

Action: The admin adds a new teacher's details and sets their login credentials.

Expected Result: A new teacher account is successfully created in the system.

Purpose: To test the fundamental user creation workflow.

Generate Initial Teacher Codes:

Action: Admin clicks the "Generate Code/QR" button for a specific new teacher.

Expected Result: A unique code and scannable QR code are generated and become active.

Purpose: To verify the on-demand generation of access codes.

Prevent Duplicate Login IDs:

Action: The admin attempts to create a new teacher using a login ID that already exists.

Expected Result: The system prevents the creation and displays a clear error message.

Purpose: To ensure data integrity and prevent account conflicts.

Global Code Regeneration:

Action: Admin clicks the "Regenerate All Codes" button and confirms the action.

Expected Result: All existing teacher codes are instantly invalidated, and new, unique codes are generated for every teacher.

Purpose: To test the critical, system-wide code reset feature.

Test Validity of Old vs. New Codes:

Action: Admin regenerates all codes. A parent then tries to join using an old code, then a new code.

Expected Result: The old code fails; the new code succeeds.

Purpose: To confirm that the regeneration process works correctly.

Live Dashboard Update Verification:

Action: Admin has the dashboard open while teachers and parents are active.

Expected Result: The admin panel updates in real-time, accurately reflecting changes in teacher statuses and queue counts.

Purpose: To ensure the admin's monitoring view is live and accurate.

Check Persistence of Active Queues During Regeneration:

Action: While parents are waiting in queues, the admin triggers the "Regenerate All Codes" function.

Expected Result: The regeneration does not affect parents who are already in a queue. Their positions are maintained.

Purpose: To ensure the feature isn't destructive to the live PTM.

View All Active Teachers:

Action: The admin logs in.

Expected Result: The dashboard correctly displays a list of all teachers that have been added to the system.

Purpose: To verify the admin has a complete overview.

Notification - "It's Your Turn":

Action: A teacher ends a meeting, and Parent B is now first in the queue.

Expected Result: Parent B immediately receives a prominent push notification.

Purpose: Tests the reliability of the most important parent notification.

Notification - "You Have Been Skipped":

Action: A parent is busy in another meeting, and their turn comes up with a second teacher.

Expected Result: The parent receives a notification explaining their turn was missed and they've been re-prioritized.

Purpose: Ensures clear communication to the parent.